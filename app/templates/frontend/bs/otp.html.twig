{% extends 'frontend/base.html.twig' %}

{% block title %}Code d'accÃ¨s{% endblock %}

{% block stylesheet %}
   {{ parent() }}
    <style>
        .otp-field {
            display: flex;
        }
        .otp-field input {
            width: 50px;
            height: 50px;
            font-size: 32px;
            padding: 10px;
            text-align: center;
            border-radius: 5px;
            margin: 2px;
            border: 2px solid #08eb2e;
            background: #f8f8f8;
            font-weight: bold;
            color: #000000;
            outline: none;
            transition: all 0.1s;
        }
        .otp-field input:focus {
            border: 2px solid #ff914a;
            box-shadow: 0 0 2px 2px rgb(255, 145, 74);
        }
        .disabled {
            opacity: 0.5;
        }
        .space {
            margin-right: 1rem !important;
        }

        .form-signin {
            max-width: 500px;
            padding: 1rem;
            height: 50vh;
        }


        .btn-check:checked+.btn,
        .btn.active, .btn.show,
        .btn:first-child:active,
        :not(.btn-check)+.btn:active,
        .btn:hover {
            color: #ffffff;;
            background-color: #e16a00;
            border: 1px solid #e16a00;
        }

        .btn {
            font-size: 16px;
            font-weight: 600;
            padding: 14px 16px 13px;
            color: #ffffff;
            border: 1px solid #ff7b00;
            border-radius: 3px;
            background-color: #ff7b00;
        }
    </style>
{% endblock %}

{% block body %}
    <main class="form-signin w-100 m-auto px-3 my-5">
        {% if error is defined %}
            <div style="align-items: center;background-color:#f3e1e1;;background-position: 100% 100%;background-repeat: no-repeat;border-bottom-left-radius: 3px;border-bottom-right-radius: 3px;box-sizing: border-box;color: #000000;display: flex;flex-wrap: wrap;padding: 15px 42px;text-align: center;">
                <div>
                    {{ error }}
                </div> <!---->
            </div>
        {% endif %}
        <form action="{{ path('check_otp') }}" method="post">
            <h1 class="h3 mb-3 fw-normal">Code d'authentification</h1>
            <div class="form-group mb-3">
                <label for="numerotelInput" class="fs-6">Veuillez saisir le code Ã  6 chiffres reÃ§u par SMS.</label>
                <div class="otp-field">
                    <input type="text" maxlength="1" tabindex="1" value="{{ otp ? otp.Code|slice(0, 1) : '' }}" name="tt[]"/>
                    <input type="text" maxlength="1" tabindex="2" value="{{ otp ? otp.Code|slice(1, 1) : '' }}" name="tt[]"/>
                    <input class="space" type="text" maxlength="1" tabindex="3" value="{{ otp ? otp.Code|slice(2, 1) : '' }}" name="tt[]"/>
                    <input type="text" maxlength="1" tabindex="4" value="{{ otp ? otp.Code|slice(3, 1) : '' }}" name="tt[]"/>
                    <input type="text" maxlength="1" tabindex="5"  value="{{ otp ? otp.Code|slice(4, 1) : '' }}" name="tt[]"/>
                    <input type="text" maxlength="1" tabindex="6"  value="{{ otp ? otp.Code|slice(5, 1) : '' }}" name="tt[]"/>
                </div>
            </div>
            <input type="hidden" id="otpcode" name="otpcode"/>
            <input type="submit" class="btn w-100 py-2" id="otpsubmit_btn" {{ otp ? '' : 'disabled' }}>
        </form>
    </main>
{% endblock %}

{% block javascript %}
{{ parent() }}
<script>
    $(document).ready(function(){
        const inputs = document.querySelectorAll(".otp-field input");
        const otpcode = document.getElementById("otpcode");
        inputs.forEach((input, index) => {
            input.dataset.index = index;
            input.addEventListener("keyup", handleOtp);
            input.addEventListener("paste", handleOnPasteOtp);
        });
        function handleOtp(e) {
            /**
             * <input type="text" ðŸ‘‰ maxlength="1" />
             * ðŸ‘‰ NOTE: On mobile devices `maxlength` property isn't supported,
             * So we write our own logic to make it work. ðŸ™‚
             */
            const input = e.target;
            let value = input.value;
            let isValidInput = value.match(/[0-9a-z]/gi);
            input.value = "";
            input.value = isValidInput ? value[0] : "";
            let fieldIndex = input.dataset.index;
            if (fieldIndex < inputs.length - 1 && isValidInput) {
                input.nextElementSibling.focus();
            }
            if (e.key === "Backspace" && fieldIndex > 0) {
                input.previousElementSibling.focus();
            }
            if (fieldIndex == inputs.length - 1 && isValidInput) {
                submit();
            }
        }
        function handleOnPasteOtp(e) {
            const data = e.clipboardData.getData("text");
            const value = data.split("");
            if (value.length === inputs.length) {
                inputs.forEach((input, index) => (input.value = value[index]));
                submit();
            }
        }
        function submit() {
            console.log("Submitting...");
            // ðŸ‘‡ Entered OTP
            let otp = "";
            inputs.forEach((input) => {
                otp += input.value;
                input.disabled = true;
                input.classList.add("disabled");
            });
            console.log(otp);
            otpcode.value = otp;
            document.getElementById("otpsubmit_btn").disabled = false;
        }
    })
</script>
{% endblock %}


