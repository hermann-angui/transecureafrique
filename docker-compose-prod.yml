version: '3.8'

networks:
  internal:
  proxy:
    external: true

services:
  traefik:
    image: traefik:2.4.8
    command:
      # Try to enable this if something isn't working.
      # Chances are, Traefik will tell you why.
      # Be careful in production as it exposes the traffic you might not want to expose.
      #--log.level=DEBUG

      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443

      - --providers.docker=true

      - --api=true

      # LetsEncrypt Staging Server - uncomment when testing
      # - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory

      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    labels:
      # Redirect all HTTP traffic to HTTPS
      - traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.to-https.entrypoints=http
      - traefik.http.routers.to-https.middlewares=to-https

      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=${CERT_RESOLVER}

      - traefik.http.middlewares.to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - proxy

  db:
    image: mariadb:10.5
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: QT6e5APtSYaU
      MYSQL_USER: root
      MYSQL_PASSWORD: QT6e5APtSYaU
      MYSQL_DATABASE: sfp_macaron_db
    volumes:
      - ./database:/var/lib/mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
    networks:
      - internal

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    labels:
      - traefik.http.routers.pma.https.rule=Host(`${PMA_DOMAIN}`)
      - traefik.http.routers.pma.https.entrypoints=https
      - traefik.http.routers.pma.https.tls=true
      - traefik.http.routers.pma.https.tls.certresolver=${CERT_RESOLVER}
    environment:
      UPLOAD_LIMIT: 300M
    networks:
      - internal
      - proxy
    ports:
      - 83:80

  app:
    container_name: app
    restart: always
    build:
      context: ./docker
    depends_on:
      - db
    environment:
      - APP_ENV=prod
      - TZ=Africa/Abidjan
      - DATABASE_URL=mysql://root:QT6e5APtSYaU@db:3306/sfp_macaron_db?serverVersion=14
    volumes:
      - ./codebase:/var/www/html
    networks:
      - internal

  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./docker/nginx
    volumes:
      - ./codebase:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/sites-available
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - internal
      - proxy
    labels:
      - traefik.http.routers.https.rule=Host(`${DOMAIN}`) || Host(`pay.${DOMAIN}`) || Host(`www.${DOMAIN}`)
      - traefik.http.routers.https.entrypoints=https
      - traefik.http.routers.https.tls=true
      - traefik.http.routers.https.tls.certresolver=${CERT_RESOLVER}
